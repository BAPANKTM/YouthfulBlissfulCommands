
Create a link history feature that displays all links the user has created, accessible when clicking the "Links" button. The interface should show link details and metrics while maintaining the existing design system.

## Dummy Data Structure

```json
[
  {
    "link_id": "L10001",
    "user_id": "101",
    "content_type": "text",
    "title": "Project Roadmap",
    "created_at": "2025-03-15T13:25:00Z",
    "metrics": {
      "total_clicks": 145,
      "total_downloads": 89
    }
  },
  {
    "link_id": "L10002",
    "user_id": "101",
    "content_type": "image",
    "title": "Product Mockup",
    "created_at": "2025-03-12T09:10:00Z",
    "metrics": {
      "total_clicks": 237,
      "total_downloads": 118
    }
  },
  {
    "link_id": "L10003",
    "user_id": "101",
    "content_type": "file",
    "title": "Quarterly Report",
    "created_at": "2025-03-08T16:40:00Z",
    "metrics": {
      "total_clicks": 78,
      "total_downloads": 45
    }
  },
  {
    "link_id": "L10004",
    "user_id": "101",
    "content_type": "text",
    "title": "Meeting Notes",
    "created_at": "2025-03-05T11:15:00Z",
    "metrics": {
      "total_clicks": 32,
      "total_downloads": 12
    }
  },
  {
    "link_id": "L10005",
    "user_id": "101",
    "content_type": "video",
    "title": "Product Demo",
    "created_at": "2025-02-28T14:20:00Z",
    "metrics": {
      "total_clicks": 312,
      "total_downloads": 203
    }
  }
]
```

## Functional Requirements

1. Create a "Links" button in the navigation or action button area
2. When clicked, display a list of links the user has created, sorted from newest to oldest
3. Show basic info for each link in the list view (title, type, creation date, metrics summary)
4. Include a tap/click action to view detailed metrics for each link
5. Display appropriate icons for different content types (text, image, file, video)
6. Include an empty state for when no links have been created

## Technical Guidelines

- **Reuse Existing Components**:
  - Use the existing Floater component for displaying links list and details
  - Match the existing UI patterns for buttons and cards
  - Leverage existing CSS variables and animations

- **Data Management**:
  - Store dummy data in `/public/data/links.json`
  - Implement client-side sorting (newest first)
  - Format dates to be user-friendly (e.g., "Mar 15, 2025")

- **UI Elements**:
  - Display content type with appropriate icons
  - Show metrics in a visually appealing way similar to existing stats cards
  - Implement a subtle transition between list view and detail view

- **Code Quality**:
  - Keep implementation minimal and focused
  - Avoid duplicate styling or components
  - Ensure responsive behavior across all screen sizes

## Visual Guidelines

- Links list should have a clean, card-based layout matching the app's design
- Each link card should show the content type icon, title, creation date, and summary metrics
- Detail view should provide a more comprehensive breakdown of metrics
- Use the existing color scheme and styling
- Ensure proper spacing and typography consistent with other components

## Important Constraints

- Do not create new CSS files; extend existing modules
- Reuse existing animation and transition styles
- Maintain consistency with existing UI/UX patterns
- Handle loading and error states appropriately
- Ensure all elements are properly aligned and sized on all screen sizes

The implementation should feel like a natural extension of the application, utilizing the same design language and interaction patterns.

special note we already have the links butotn in the end of site navigation bar.

Home Links HIstory

(in this links will work) dont creat eunecsary new buggy buttons.
