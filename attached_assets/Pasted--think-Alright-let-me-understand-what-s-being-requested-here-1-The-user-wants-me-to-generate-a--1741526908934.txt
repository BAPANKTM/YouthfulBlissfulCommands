<think>
Alright, let me understand what's being requested here:

1. The user wants me to generate a prompt that describes how to modify the existing Upload component.
2. The current component has a "drag and drop" functionality which isn't appropriate for a Telegram web app.
3. Instead, they want to create a flow where:
   - When user clicks on upload, they should see options to select media type (text or media)
   - If text is selected, show an input bar with upload and back buttons
   - The back button should return to the media type selection screen

I'll create a prompt that clearly articulates these requirements while maintaining the existing professional and compact UI design of the application.
</think>

# Upload Component Modification Prompt for TeleShare

Create a streamlined, mobile-friendly media upload flow for our TeleShare Telegram web app by modifying the existing upload component:

## Modification Requirements

- Remove the current "drag and drop" functionality as it's not suitable for our Telegram web app context
- Create a clean, intuitive upload flow with multiple steps

## Upload Flow Sequence

1. **Initial Upload Button**
   - Maintain the existing upload button UI but modify the click behavior

2. **Media Type Selection Screen**
   - When user clicks "Upload", show a simple selection screen with two options:
     - "Upload Media" (images, videos, files)
     - "Share Text" 
   - Design should use our existing button styles and color scheme
   - Keep the UI minimal and focused

3. **Text Entry Screen** (when "Share Text" is selected)
   - Show a textarea with placeholder "Enter your text here..."
   - Include an "Upload" button using our primary style
   - Add a "Back" button to return to media type selection
   - Optional character counter

## UI Requirements

- Maintain our existing compact, professional dark UI aesthetic
- Use consistent animations with the rest of the app
- Ensure all screens are fully responsive across device sizes
- Keep text and buttons large enough for mobile touch targets
- Use our purple accent color (#9D5CFF) for key actions

## Technical Implementation

- Modify the existing Upload component and Floater content
- Use component state to manage the upload flow steps
- Preserve the existing styling patterns and CSS modules
- Ensure smooth transitions between different upload screens

The implementation should be sleek and straightforward, focusing on usability for mobile users while maintaining our professional design language.
